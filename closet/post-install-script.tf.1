# us-west/post-install-script.tf
resource "local_file" "env_script" {
  content = <<-EOF
    #!/bin/bash
    # Environment variable setup for HashiStack
    export CONSUL_HTTP_ADDR=http://${module.hashistack.server_lb_ip}:8600
    export NOMAD_ADDR=http://${module.hashistack.server_lb_ip}:4646
    export VAULT_ADDR=http://${module.hashistack.server_lb_ip}:8200
  EOF
  filename = "${path.module}/set_env.sh"
  file_permission = "0755"

  # This script should be run manually, reminders added to output
  provisioner "local-exec" {
    command = "echo Remember to run source ${self.filename} to load the environment variables"
  }

  depends_on = [module.hashistack]
}

resource "local_file" "remote_script" {
  content = <<-EOF
    #!/bin/bash

    # Populate variables
    INSTANCE_IPS=("${join(" ", module.hashistack.client_public_ips)}" "${join(" ", module.hashistack.server_public_ips)}")
    CLIENT_COUNT=${var.client_count}
    SERVER_COUNT=${var.server_count}
    KEY_NAME=${var.key_name}

    # Common function to wait for apt processes to finish
    wait_for_apt() {
      while pgrep -u root 'apt|dpkg' >/dev/null; do
        sleep 10
      done
    }

    # Update and install required packages
    update_and_install() {
      sudo apt-get update
      sudo apt-get install -y ec2-instance-connect awscli net-tools
    }

    # Modify directory permissions and ownership
    modify_permissions() {
      sudo find /opt -type d -exec chmod g+s {} \;
      sudo chown -R root:ubuntu /opt
      sudo chmod -R g+rX /opt
    }

    # Set dynamic PS1 and other variables in .bashrc
    update_bashrc() {
      echo "alias env='env -0 | sort -z | tr '\\0' '\\n''" >> ~/.bashrc
      echo "export AWS_DEFAULT_REGION=\$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/.$//')" >> ~/.bashrc
      echo "export INSTANCE_NAME=\$(curl -s http://169.254.169.254/latest/meta-data/tags/instance/Name)" >> ~/.bashrc
      echo "export PROMPTID=\$(curl -s http://169.254.169.254/latest/meta-data/tags/instance/PromptID)" >> ~/.bashrc
      echo "export PUBIP=\$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)" >> ~/.bashrc
      echo "export PRIIP=\$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)" >> ~/.bashrc
      echo 'if [[ $TERM_PROGRAM == "WarpTerminal" ]]; then
        PS1="\\[\\033[0;33m\\](\$PROMPTID)[Int: \$PRIIP / Ext: \$PUBIP] \\[\\033[01;32m\\]\\u\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ "
      else
        PS1="\\[\\033[0;33m\\](\$PROMPTID)[Int: \$PRIIP / Ext: \$PUBIP]\\[\\033[0m\\]\\n\\[\\033[01;32m\\]\\u\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ "
      fi' >> ~/.bashrc
    }

    # SSH into each instance and perform setup
    for ip in "${INSTANCE_IPS[@]}"; do
      ssh -o StrictHostKeyChecking=no -i "~/.ssh/${KEY_NAME}.pem" ubuntu@$ip 'bash -s' <<'EOF'
        $(typeset -f wait_for_apt update_and_install modify_permissions update_bashrc)
        wait_for_apt
        update_and_install
        modify_permissions
        update_bashrc
      EOF
    done
  EOF
  filename = "${path.module}/remote-config.sh"
  file_permission = "0755"

  depends_on = [local_file.env_script]
}
